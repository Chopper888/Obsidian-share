/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/

'use strict';

var obsidian = require('obsidian');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

class MetatableSettingTab extends obsidian.PluginSettingTab {
    constructor(app, plugin) {
        super(app, plugin);
        this.plugin = plugin;
    }
    display() {
        const { containerEl, plugin } = this;
        containerEl.empty();
        containerEl.createEl('h2', { text: 'Metatable Settings' });
        new obsidian.Setting(containerEl)
            .setName('Expansion level')
            .setDesc('Level of expansion of the metatable tree')
            .addDropdown(drop => drop
            .addOption('expanded', 'Fully expanded')
            .addOption('leaf-collapsed', 'Collapse leafs')
            .addOption('all-collapsed', 'Collapse all')
            .setValue(plugin.settings.expansionMode)
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            plugin.settings.expansionMode = value;
            yield plugin.saveSettings();
        })));
        new obsidian.Setting(containerEl)
            .setName('Null value')
            .setDesc('Text to show when a key has no value. Defaults to nothing')
            .addText(text => text
            .setValue(plugin.settings.nullValue)
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            plugin.settings.nullValue = value;
            yield plugin.saveSettings();
        })));
    }
}

function toggle(trigger) {
    const isExpanded = trigger.getAttribute('aria-expanded') == 'true';
    trigger.setAttribute('aria-expanded', String(!isExpanded));
}
function clickHandler(event, searchFn) {
    const trigger = event.target;
    if (trigger === null || trigger === void 0 ? void 0 : trigger.hasAttribute('aria-expanded')) {
        event.stopPropagation();
        toggle(trigger);
        return;
    }
    if (trigger === null || trigger === void 0 ? void 0 : trigger.hasAttribute('href')) {
        event.stopPropagation();
        const href = trigger.getAttribute('href');
        if (href.startsWith('#')) {
            searchFn(`tag:${href}`);
        }
    }
}
function keyHandler(event) {
    const trigger = event.target;
    if ((event.code == 'Space' || event.code == 'Enter') && (trigger === null || trigger === void 0 ? void 0 : trigger.hasAttribute('aria-expanded'))) {
        event.stopPropagation();
        event.preventDefault();
        toggle(trigger);
    }
}
function tag(value) {
    const a = document.createElement('a');
    a.addClass('tag');
    a.setAttribute('target', '_blank');
    a.setAttribute('rel', 'noopener');
    a.setAttribute('href', `#${value}`);
    a.append(`${value}`);
    return a;
}
function url(value) {
    const a = document.createElement('a');
    a.addClass('external-link');
    a.setAttribute('target', '_blank');
    a.setAttribute('rel', 'noopener');
    a.setAttribute('href', value);
    a.append(value);
    return a;
}
function isOpen(mode, depth) {
    if (mode == 'expanded') {
        return true;
    }
    // Keep the root open when leafs are collapsed
    if (mode == 'leaf-collapsed' && depth == 0) {
        return true;
    }
    // all-collapsed
    return false;
}
function isUrl(value) {
    const allowedProtocols = ['http:', 'https:'];
    try {
        const url = new URL(value);
        return allowedProtocols.some(protocol => url.protocol == protocol);
    }
    catch (_) {
        return false;
    }
}
function enrichValue(value) {
    // Link URLs
    if (isUrl(value)) {
        return url(value);
    }
    return value;
}
/**
 * A set member with a scalar value.
 */
function leafMember(label, data) {
    const root = document.createElement('tr');
    const key = document.createElement('th');
    const value = document.createElement('td');
    key.addClass('key');
    key.append(label);
    value.addClass('value');
    value.append(enrichValue(data));
    root.addClass('member');
    root.append(key);
    root.append(value);
    return root;
}
/**
 * A set member with a complex value.
 */
function nodeMember(label, value, settings) {
    const root = details(label, value, Object.assign(Object.assign({}, settings), { depth: settings.depth + 1 }));
    root.addClass('member');
    return root;
}
/**
 * A set member.
 */
function member(label, value, settings) {
    const patchedValue = value == null ? settings.nullValue : value;
    if (typeof patchedValue == 'object') {
        return nodeMember(label, value, settings);
    }
    return leafMember(label, patchedValue);
}
/**
 * A set of members.
 */
function set(data, settings) {
    const root = document.createElement('table');
    const { depth } = settings;
    const valueSettings = Object.assign(Object.assign({}, settings), { depth: depth + 1 });
    root.addClass('set');
    Object.entries(data).forEach(([label, value]) => {
        root.append(member(label, value, valueSettings));
    });
    return root;
}
function mapWith(value, settings, labelledBy) {
    const { mappers, keymap } = settings;
    const ref = keymap[labelledBy];
    const fn = mappers[ref];
    if (fn === undefined) {
        return value;
    }
    return fn(value);
}
/**
 * A list of members.
 */
function list(data, settings, labelledBy) {
    const root = document.createElement('ul');
    const { depth } = settings;
    const valueSettings = Object.assign(Object.assign({}, settings), { depth: depth + 1 });
    // TODO: Generalise
    if (labelledBy == 'tags') {
        root.addClass('tag-list');
    }
    data.forEach((item) => {
        let value;
        const li = document.createElement('li');
        if (Array.isArray(item)) {
            value = list(item, valueSettings);
        }
        else if (typeof item == 'object') {
            value = set(item, valueSettings);
        }
        else {
            value = mapWith(item, settings, labelledBy);
        }
        li.append(value);
        root.append(li);
    });
    return root;
}
/**
 * A collapsible group.
 */
function details(label, data, settings) {
    const root = document.createElement('tr');
    const key = document.createElement('th');
    const value = document.createElement('td');
    const marker = document.createElement('div');
    const { depth, mode } = settings;
    const valueSettings = Object.assign(Object.assign({}, settings), { depth: depth + 1 });
    const valueId = `${label}-${depth}`;
    let valueInner;
    key.addClass('key');
    key.addClass('toggle');
    key.setAttribute('role', 'button');
    key.setAttribute('aria-expanded', String(isOpen(mode, depth)));
    key.setAttribute('aria-controls', valueId);
    key.setAttribute('tabindex', '0');
    key.append(label);
    root.append(key);
    valueInner = Array.isArray(data)
        ? list(data, valueSettings, label)
        : set(data, valueSettings);
    value.addClass('value');
    value.setAttribute('id', valueId);
    value.append(valueInner);
    root.append(value);
    marker.addClass('marker');
    value.append(marker);
    return root;
}
/**
 * Normalises a list of tags as an array of strings.
 */
function normaliseTags(data) {
    if (typeof data == 'string') {
        return data.split(',').map(x => x.trim());
    }
    return data;
}
function metatable(data, pluginSettings) {
    const fragment = new DocumentFragment();
    const { expansionMode: mode, searchFn, nullValue } = pluginSettings;
    const settings = {
        mode,
        nullValue,
        depth: 0,
        mappers: {
            autotag: tag,
        },
        keymap: {
            tags: 'autotag',
        },
    };
    const root = document.createElement('details');
    const summary = document.createElement('summary');
    // @ts-ignore
    const { tags } = data;
    const ndata = tags ? Object.assign(Object.assign({}, data), { tags: normaliseTags(tags) }) : data;
    const value = set(ndata, settings);
    if (isOpen(mode, 0)) {
        root.setAttribute('open', '');
    }
    summary.append('Metadata');
    root.addClass('metatable');
    root.append(summary);
    root.append(value);
    root.addEventListener('click', (e) => clickHandler(e, searchFn));
    root.addEventListener('keydown', keyHandler);
    fragment.append(root);
    return fragment;
}

var styles = ":host-context(.theme-light) {\n  --metatable-foreground: var(--text-muted, darkslategrey);\n  --metatable-key-background: var(--background-primary-alt, #f3f3f3);\n  --metatable-key-border-color: var(--background-modifier-border, lightgrey);\n  --metatable-key-border-color-focus: orange;\n  --metatable-key-focus: var(--background-match-highlight, lightyellow);\n  --metatable-tag-background: var(--background-primary-alt, #f3f3f3);\n  --metatable-external-link-color: var(--text-accent, #705dcf);\n  --metatable-external-link-color-hover: var(--text-accent-hover, #8875ff);\n}\n\n:host-context(.theme-dark) {\n  --metatable-foreground: var(--text-muted, #999);\n  --metatable-key-background: var(--background-primary-alt, #111);\n  --metatable-key-border-color: var(--background-modifier-border, #333);\n  --metatable-key-border-color-focus: orange;\n  --metatable-key-focus: black;\n  --metatable-tag-background: var(--background-primary-alt, #111);\n  --metatable-external-link-color: var(--text-accent, #705dcf);\n  --metatable-external-link-color-hover: var(--text-accent-hover, #8875ff);\n}\n\n:host {\n  --metatable-collapsed-symbol: \"▶︎\";\n  --metatable-expanded-symbol: \"▼\";\n  --metatable-font-family: var(--text, sans-serif);\n  --metatable-font-size: var(--font-small, 13px);\n  --metatable-key-border-width: 2px;\n  --metatable-mark-symbol: \"…\";\n  --metatable-value-background: transparent;\n  --metatable-background: transparent;\n  --metatable-external-link-icon: url(/public/images/874d8b8e340f75575caacd8d766a9659.svg);\n}\n\n\n* {\n  box-sizing: border-box;\n}\n\ndetails {\n  background-color: var(--metatable-background);\n  color: var(--metatable-foreground);\n  font-family: var(--metatable-font-family);\n  font-size: var(--metatable-font-size);\n}\n\nsummary {\n  cursor: pointer;\n}\n\nsummary:focus {\n  outline: none;\n}\n\nsummary:focus-visible {\n  outline: none;\n  background-color: var(--metatable-key-focus)\n}\n\n.set {\n  background-color: var(--metatable-background);\n  display: grid;\n  grid-gap: 2px;\n  margin-top: 0.4rem;\n}\n\n.member {\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-template-areas: \"key value\";\n  grid-gap: 2px;\n}\n\n.key[role=button] {\n  cursor: pointer;\n}\n\n.member .key {\n  background-color: var(--metatable-key-background);\n  border-right: var(--metatable-key-border-width) solid var(--metatable-key-border-color);\n  display: block;\n  font-weight: bold;\n  grid-area: key;\n  padding: 0.4rem;\n  text-align: left;\n  white-space: nowrap;\n}\n\n.member .value {\n  background-color: var(--metatable-value-background);\n  grid-area: value;\n  margin: 0;\n  padding: 0.4rem;\n}\n\n.member .key:focus {\n  outline: none;\n}\n\n.member .key:focus-visible {\n  outline: none;\n  border-right-color: var(--metatable-key-border-color-focus);\n  background-color: var(--metatable-key-focus);\n}\n\n.value ul {\n  margin: 0;\n  padding: 0;\n}\n\n.value li {\n  margin-left: 1rem;\n}\n\n.key[aria-expanded]::before {\n  margin-right: 0.3rem;\n  font-size: 0.6rem;\n}\n\n.key[aria-expanded=true]::before {\n  content: var(--metatable-expanded-symbol);\n}\n\n.key[aria-expanded=false]::before {\n  content: var(--metatable-collapsed-symbol);\n}\n\n.key[aria-expanded=false] + .value > :first-child {\n  display: none;\n}\n\n.key[aria-expanded=false] + .value > .marker::after {\n  content: var(--metatable-mark-symbol);\n  display: block;\n  padding: 0.4rem;\n}\n\n/* Mappers */\n\n.tag-list li {\n  display: inline-block;\n  margin: 0 0.4rem 0 0;\n}\n\n.tag {\n  background-color: var(--metatable-tag-background);\n  border-radius: 1rem;\n  color: var(--metatable-foreground);\n  display: inline-block;\n  padding: 0.1rem 0.6rem;\n  text-decoration: none;\n}\n\n.tag:hover {\n  filter: brightness(0.8);\n}\n\n.tag:focus, .external-link:focus {\n  outline: none;\n}\n\n.tag:focus-visible, .external-link:focus-visible {\n  outline: none;\n  background-color: var(--metatable-key-focus)\n}\n\n.external-link {\n  color: var(--metatable-external-link-color);\n  display: inline-block;\n}\n.external-link::after {\n  content: var(--metatable-external-link-icon);\n  display: inline-block;\n  margin-left: 0.3rem;\n  vertical-align: sub;\n}\n\n.external-link:hover {\n  color: var(--metatable-external-link-color-hover);\n}\n";

function log(msg) {
    console.log(`metatable: ${msg}`);
}
const DEFAULT_SETTINGS = {
    expansionMode: 'expanded',
    nullValue: '',
    searchFn: null,
};
function createMetatable(el, data, settings) {
    const wrapper = el.createEl('div');
    wrapper.addClass('obsidian-metatable');
    wrapper.attachShadow({ mode: 'open' });
    const fragment = new DocumentFragment();
    fragment.createEl('style', { text: styles });
    fragment.append(metatable(data, settings));
    wrapper.shadowRoot.append(fragment);
}
function frontmatterProcessor(el, ctx) {
    return __awaiter(this, void 0, void 0, function* () {
        const plugin = this;
        const frontmatter = yield el.querySelector('.frontmatter');
        if (frontmatter !== null) {
            const target = el.querySelector('.frontmatter-container');
            target.removeAttribute('class');
            // Prevents an undesired `display: none` if `tags` is not present.
            target.removeAttribute('style');
            target.empty();
            // @ts-ignore
            const searchFn = plugin.app.internalPlugins.getPluginById('global-search').instance.openGlobalSearch.bind(plugin);
            const settings = Object.assign(Object.assign({}, plugin.settings), { searchFn });
            if (ctx.frontmatter) {
                createMetatable(target, ctx.frontmatter, settings);
            }
        }
    });
}
class MetatablePlugin extends obsidian.Plugin {
    onload() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.loadSettings();
            this.registerMarkdownPostProcessor(frontmatterProcessor.bind(this));
            this.addSettingTab(new MetatableSettingTab(this.app, this));
            log('loaded');
        });
    }
    onunload() {
        log('unloaded');
    }
    loadSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            this.settings = Object.assign({}, DEFAULT_SETTINGS, yield this.loadData());
        });
    }
    saveSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.saveData(this.settings);
        });
    }
}

module.exports = MetatablePlugin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
