/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/

'use strict';

var obsidian = require('obsidian');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

class MetatableSettingTab extends obsidian.PluginSettingTab {
    constructor(app, plugin) {
        super(app, plugin);
        this.plugin = plugin;
    }
    display() {
        const { containerEl, plugin } = this;
        containerEl.empty();
        containerEl.createEl('h2', { text: 'Metatable Settings' });
        new obsidian.Setting(containerEl)
            .setName('Expansion level')
            .setDesc('Level of expansion of the metatable tree')
            .addDropdown(drop => drop
            .addOption('expanded', 'Fully expanded')
            .addOption('leaf-collapsed', 'Collapse leafs')
            .addOption('all-collapsed', 'Collapse all')
            .setValue(plugin.settings.expansionMode)
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            plugin.settings.expansionMode = value;
            yield plugin.saveSettings();
        })));
        new obsidian.Setting(containerEl)
            .setName('Ignore null values')
            .setDesc('Ignore any member with a null value.')
            .addToggle(setting => setting
            .setValue(plugin.settings.ignoreNulls)
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            plugin.settings.ignoreNulls = value;
            yield plugin.saveSettings();
            this.display();
        })));
        if (!plugin.settings.ignoreNulls) {
            new obsidian.Setting(containerEl)
                .setName('Null value')
                .setDesc('Text to show when a key has no value. Defaults to nothing')
                .addText(text => text
                .setValue(plugin.settings.nullValue)
                .onChange((value) => __awaiter(this, void 0, void 0, function* () {
                plugin.settings.nullValue = value;
                yield plugin.saveSettings();
            })));
        }
        new obsidian.Setting(containerEl)
            .setName('Skip key')
            .setDesc('When this key is found and `true`, the metatable will not be displayed')
            .addText(text => text
            .setValue(plugin.settings.skipKey)
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            plugin.settings.skipKey = value;
            yield plugin.saveSettings();
        })));
        new obsidian.Setting(containerEl)
            .setName('Ignored keys')
            .setDesc('Any key found in this comma-separated list will be ignored whilst displaying the metatable')
            .addText(text => text
            .setValue(plugin.settings.ignoredKeys.join(', '))
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            plugin.settings.ignoredKeys = value.split(',').map(v => v.trim());
            yield plugin.saveSettings();
        })));
        containerEl.createEl('h3', { text: 'Experimental' });
        new obsidian.Setting(containerEl)
            .setName('Autolink')
            .setDesc('Enables autolinks for wikilinks `[[target]]`, frontmatter links `%target%` and local links `./deep/target`')
            .addToggle(setting => setting
            .setValue(plugin.settings.autolinks)
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            plugin.settings.autolinks = value;
            yield plugin.saveSettings();
        })));
    }
}

function toggle(trigger) {
    const isExpanded = trigger.getAttribute('aria-expanded') == 'true';
    trigger.setAttribute('aria-expanded', String(!isExpanded));
}
function clickHandler(event, searchFn) {
    const trigger = event.target;
    if (trigger === null || trigger === void 0 ? void 0 : trigger.hasAttribute('aria-expanded')) {
        event.stopPropagation();
        event.preventDefault();
        toggle(trigger);
        return;
    }
    if (trigger === null || trigger === void 0 ? void 0 : trigger.hasAttribute('href')) {
        event.stopPropagation();
        const href = trigger.getAttribute('href');
        if (trigger.hasClass('tag')) {
            event.preventDefault();
            searchFn(`tag:${href}`);
        }
    }
}
function keyHandler(event) {
    const trigger = event.target;
    if ((event.code == 'Space' || event.code == 'Enter') && (trigger === null || trigger === void 0 ? void 0 : trigger.hasAttribute('aria-expanded'))) {
        event.stopPropagation();
        event.preventDefault();
        toggle(trigger);
    }
}
function tag(value) {
    const a = document.createElement('a');
    a.addClass('tag');
    a.setAttribute('target', '_blank');
    a.setAttribute('rel', 'noopener');
    a.setAttribute('href', `#${value}`);
    a.append(`${value}`);
    return a;
}
/**
 * A list of tags.
 */
function taglist(data, member, settings) {
    const root = document.createElement('ul');
    root.addClass('tag-list');
    data.forEach((item) => {
        const li = document.createElement('li');
        const value = tag(item);
        li.append(value);
        root.append(li);
    });
    return root;
}
function externalLink(value) {
    const a = document.createElement('a');
    a.addClass('external-link');
    a.setAttribute('target', '_blank');
    a.setAttribute('rel', 'noopener');
    a.setAttribute('href', value);
    a.append(value);
    return a;
}
function internalLink(url) {
    const a = document.createElement('a');
    const value = url.toString();
    const label = url.searchParams.get('file');
    a.dataset.href = value;
    a.setAttribute('href', value);
    a.addClass('internal-link');
    a.setAttribute('target', '_blank');
    a.setAttribute('rel', 'noopener');
    a.append(label);
    return a;
}
/**
/* Creates a link for internal links from a string of the form `[[text]]`.
 */
function wikiLink(value, vault) {
    const vaultName = vault.getName();
    const cleanValue = value.slice(2, -2);
    const url = new URL(`obsidian://open?vault=${vaultName}&file=${encodeURI(obsidian.getLinkpath(cleanValue))}`);
    return internalLink(url);
}
/**
/* Creates a link for internal links from a string of the form `%text%`.
 */
function frontmatterLink(value, vault) {
    const vaultName = vault.getName();
    const cleanValue = value.slice(1, -1);
    const url = new URL(`obsidian://open?vault=${vaultName}&file=${encodeURI(obsidian.getLinkpath(cleanValue))}`);
    return internalLink(url);
}
/**
 * Creates a link for local paths.
 */
function localLink(value, vault) {
    const vaultName = vault.getName();
    // const cleanValue = value.slice(2, -2)
    const url = new URL(`obsidian://open?vault=${vaultName}&file=${encodeURI(obsidian.getLinkpath(value))}`);
    return internalLink(url);
}
function isOpen(mode, depth) {
    if (mode == 'expanded') {
        return true;
    }
    // Keep the root open when leafs are collapsed
    if (mode == 'leaf-collapsed' && depth == 0) {
        return true;
    }
    // all-collapsed
    return false;
}
function isObsidianUrl(url) {
    return (url instanceof URL && url.protocol == 'obsidian:');
}
function isUrl(url) {
    const allowedProtocols = ['http:', 'https:'];
    return (url instanceof URL && allowedProtocols.some(protocol => url.protocol == protocol));
}
function isLocalLink(value) {
    return value.startsWith('./');
}
function tryUrl(value) {
    try {
        return new URL(value);
    }
    catch (_) {
    }
}
function isWikiLink(value) {
    return (value.startsWith('[[') && value.endsWith(']]'));
}
function isFrontmatterLink(value) {
    return (value.startsWith('%') && value.endsWith('%'));
}
function enrichValue(value, settings) {
    const cleanValue = value.trim();
    const { autolinks } = settings;
    if (autolinks) {
        if (isWikiLink(cleanValue)) {
            return wikiLink(cleanValue, settings.vault);
        }
        if (isFrontmatterLink(cleanValue)) {
            return frontmatterLink(cleanValue, settings.vault);
        }
        if (isLocalLink(value)) {
            return localLink(cleanValue, settings.vault);
        }
    }
    const url = tryUrl(cleanValue);
    if (isObsidianUrl(url)) {
        return internalLink(url);
    }
    if (isUrl(url)) {
        return externalLink(cleanValue);
    }
    return value;
}
/**
 * A set member with a scalar value.
 */
function leafMember(label, data, settings) {
    const { members } = settings;
    const root = document.createElement('tr');
    const key = document.createElement('th');
    const value = document.createElement('td');
    const special = members.find(m => m.key == label);
    const datum = special ? special.mapper(data, special, settings) : enrichValue(data, settings);
    key.addClass('key');
    key.append(label);
    value.addClass('value');
    value.append(datum);
    root.addClass('member');
    root.append(key);
    root.append(value);
    return root;
}
/**
 * A set member with a complex value.
 */
function nodeMember(label, value, settings) {
    const root = details(label, value, Object.assign(Object.assign({}, settings), { depth: settings.depth + 1 }));
    root.addClass('member');
    return root;
}
/**
 * A set member.
 */
function member(label, value, settings) {
    const patchedValue = value == null ? settings.nullValue : value;
    if (typeof patchedValue == 'object') {
        return nodeMember(label, value, settings);
    }
    return leafMember(label, patchedValue, settings);
}
/**
 * A set of members.
 */
function set(data, settings) {
    const root = document.createElement('table');
    const { depth, ignoredKeys, ignoreNulls } = settings;
    const valueSettings = Object.assign(Object.assign({}, settings), { depth: depth + 1 });
    root.addClass('set');
    Object.entries(data).forEach(([label, value]) => {
        if (ignoreNulls && value == null)
            return;
        if (ignoredKeys.some(key => key == label))
            return;
        root.append(member(label, value, valueSettings));
    });
    return root;
}
/**
 * A list of members.
 */
function list(data, settings) {
    const root = document.createElement('ul');
    const { depth } = settings;
    const valueSettings = Object.assign(Object.assign({}, settings), { depth: depth + 1 });
    data.forEach((item) => {
        let value;
        const li = document.createElement('li');
        if (Array.isArray(item)) {
            value = list(item, valueSettings);
        }
        else if (typeof item == 'object') {
            value = set(item, valueSettings);
        }
        else {
            value = enrichValue(item, valueSettings);
        }
        li.append(value);
        root.append(li);
    });
    return root;
}
function ordinaryValue(data, settings) {
    return Array.isArray(data)
        ? list(data, settings)
        : set(data, settings);
}
/**
 * A collapsible group.
 */
function details(label, data, settings) {
    const root = document.createElement('tr');
    const key = document.createElement('th');
    const value = document.createElement('td');
    const { depth, mode, members } = settings;
    const special = members.find(m => m.key == label);
    const valueSettings = Object.assign(Object.assign({}, settings), { depth: depth + 1 });
    const valueId = `${label}-${depth}`;
    const datum = special
        ? special.mapper(data, special, settings)
        : ordinaryValue(data, valueSettings);
    key.addClass('key');
    key.append(label);
    root.append(key);
    value.addClass('value');
    value.setAttribute('id', valueId);
    value.append(datum);
    root.append(value);
    if (special == undefined || special.foldable) {
        const marker = document.createElement('div');
        key.addClass('toggle');
        key.setAttribute('role', 'button');
        key.setAttribute('aria-expanded', String(isOpen(mode, depth)));
        key.setAttribute('aria-controls', valueId);
        key.setAttribute('tabindex', '0');
        marker.addClass('marker');
        value.append(marker);
    }
    return root;
}
/**
 * Normalises a list of tags as an array of strings.
 */
function normaliseTags(data) {
    if (typeof data == 'string') {
        return data.split(',').map(x => x.trim());
    }
    return data;
}
function sheath(data, settings) {
    const root = document.createElement('details');
    const summary = document.createElement('summary');
    // @ts-ignore
    const { tags } = data;
    const ndata = tags ? Object.assign(Object.assign({}, data), { tags: normaliseTags(tags) }) : data;
    const value = set(ndata, settings);
    if (isOpen(settings.mode, 0)) {
        root.setAttribute('open', '');
    }
    summary.append('Metadata');
    root.addClass('metatable');
    root.append(summary);
    root.append(value);
    return root;
}
function metatable(data, pluginSettings) {
    const fragment = new DocumentFragment();
    const { expansionMode: mode, searchFn, nullValue, skipKey, ignoredKeys, ignoreNulls, autolinks, vault, } = pluginSettings;
    const settings = {
        mode,
        ignoreNulls,
        nullValue,
        ignoredKeys,
        autolinks,
        depth: 0,
        members: [{
                key: 'tags',
                mapper: taglist,
                foldable: false,
            }],
        vault,
    };
    // @ts-ignore
    const skip = data[skipKey];
    if (skip) {
        return fragment;
    }
    const root = sheath(data, settings);
    root.addEventListener('click', (e) => clickHandler(e, searchFn));
    root.addEventListener('keydown', keyHandler);
    fragment.append(root);
    return fragment;
}

var styles = ":host-context(.theme-light) {\n  --metatable-foreground: var(--text-muted, darkslategrey);\n  --metatable-key-background: var(--background-primary-alt, #f3f3f3);\n  --metatable-key-border-color: var(--background-modifier-border, lightgrey);\n  --metatable-key-border-color-focus: orange;\n  --metatable-key-focus: var(--background-match-highlight, lightyellow);\n  --metatable-tag-background: var(--background-primary-alt, #f3f3f3);\n  --metatable-external-link-color: var(--text-accent, #705dcf);\n  --metatable-external-link-color-hover: var(--text-accent-hover, #8875ff);\n}\n\n:host-context(.theme-dark) {\n  --metatable-foreground: var(--text-muted, #999);\n  --metatable-key-background: var(--background-primary-alt, #111);\n  --metatable-key-border-color: var(--background-modifier-border, #333);\n  --metatable-key-border-color-focus: orange;\n  --metatable-key-focus: black;\n  --metatable-tag-background: var(--background-primary-alt, #111);\n  --metatable-external-link-color: var(--text-accent, #705dcf);\n  --metatable-external-link-color-hover: var(--text-accent-hover, #8875ff);\n}\n\n:host {\n  --metatable-collapsed-symbol: \"▶︎\";\n  --metatable-expanded-symbol: \"▼\";\n  --metatable-font-family: var(--text, sans-serif);\n  --metatable-font-size: var(--font-small, 13px);\n  --metatable-key-border-width: 2px;\n  --metatable-key-min-width: 130px;\n  --metatable-mark-symbol: \"…\";\n  --metatable-value-background: transparent;\n  --metatable-background: transparent;\n  --metatable-external-link-icon: url(/public/images/874d8b8e340f75575caacd8d766a9659.svg);\n}\n\n\n* {\n  box-sizing: border-box;\n}\n\ndetails {\n  background-color: var(--metatable-background);\n  color: var(--metatable-foreground);\n  font-family: var(--metatable-font-family);\n  font-size: var(--metatable-font-size);\n}\n\nsummary {\n  cursor: pointer;\n}\n\nsummary:focus {\n  outline: none;\n}\n\nsummary:focus-visible {\n  outline: none;\n  background-color: var(--metatable-key-focus)\n}\n\n.set {\n  background-color: var(--metatable-background);\n  display: grid;\n  grid-gap: 2px;\n  margin-top: 0.4rem;\n}\n\n.member {\n  display: grid;\n  grid-gap: 2px;\n  grid-template-columns: minmax(0, 1fr) minmax(0, 4fr);\n  grid-template-areas: \"key value\";\n}\n\n.key[role=button] {\n  cursor: pointer;\n}\n\n.member .key {\n  background-color: var(--metatable-key-background);\n  border-right: var(--metatable-key-border-width) solid var(--metatable-key-border-color);\n  display: block;\n  font-weight: bold;\n  grid-area: key;\n  padding: 0.4rem;\n  text-align: left;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: var(--metatable-key-min-width);\n}\n\n.member .value {\n  background-color: var(--metatable-value-background);\n  grid-area: value;\n  margin: 0;\n  padding: 0.4rem;\n}\n\n.member .key:focus {\n  outline: none;\n}\n\n.member .key:focus-visible {\n  outline: none;\n  border-right-color: var(--metatable-key-border-color-focus);\n  background-color: var(--metatable-key-focus);\n}\n\n.value ul {\n  margin: 0;\n  padding: 0;\n}\n\n.value li {\n  margin-left: 1rem;\n}\n\n.key[aria-expanded]::before {\n  margin-right: 0.3rem;\n  font-size: 0.6rem;\n}\n\n.key[aria-expanded=true]::before {\n  content: var(--metatable-expanded-symbol);\n}\n\n.key[aria-expanded=false]::before {\n  content: var(--metatable-collapsed-symbol);\n}\n\n.key[aria-expanded=false] + .value > :first-child {\n  display: none;\n}\n\n.key[aria-expanded=false] + .value > .marker::after {\n  content: var(--metatable-mark-symbol);\n  display: block;\n  padding: 0.4rem;\n}\n\n/* Mappers */\n\n.tag-list li {\n  display: inline-block;\n  margin: 0 0.4rem 0 0;\n}\n\n.tag {\n  background-color: var(--metatable-tag-background);\n  border-radius: 1rem;\n  color: var(--metatable-foreground);\n  display: inline-block;\n  padding: 0.1rem 0.6rem;\n  text-decoration: none;\n}\n\n.tag:hover {\n  filter: brightness(0.8);\n}\n\n.tag:focus, .external-link:focus {\n  outline: none;\n}\n\n.tag:focus-visible, .external-link:focus-visible {\n  outline: none;\n  background-color: var(--metatable-key-focus)\n}\n\n.external-link {\n  color: var(--metatable-external-link-color);\n  display: inline-block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 450px;\n  white-space: nowrap;\n}\n\n.external-link::after {\n  content: var(--metatable-external-link-icon);\n  display: inline-block;\n  margin-left: 0.3rem;\n  vertical-align: sub;\n}\n\n.external-link:hover {\n  color: var(--metatable-external-link-color-hover);\n}\n";

function log(msg) {
    console.log(`metatable: ${msg}`);
}
const DEFAULT_SETTINGS = {
    expansionMode: 'expanded',
    ignoreNulls: false,
    nullValue: '',
    searchFn: null,
    skipKey: 'metatable',
    ignoredKeys: ['metatable', 'frontmatter'],
    autolinks: false,
    vault: null,
};
function createMetatable(el, data, settings) {
    const wrapper = el.createEl('div');
    wrapper.addClass('obsidian-metatable');
    wrapper.attachShadow({ mode: 'open' });
    const fragment = new DocumentFragment();
    fragment.createEl('style', { text: styles });
    fragment.append(metatable(data, settings));
    wrapper.shadowRoot.append(fragment);
}
function frontmatterProcessor(el, ctx) {
    return __awaiter(this, void 0, void 0, function* () {
        const plugin = this;
        const frontmatter = yield el.querySelector('.frontmatter');
        if (frontmatter !== null) {
            const target = el.querySelector('.frontmatter-container');
            target.removeAttribute('class');
            // Prevents an undesired `display: none` if `tags` is not present.
            target.removeAttribute('style');
            target.empty();
            // @ts-ignore
            const searchFn = plugin.app.internalPlugins.getPluginById('global-search').instance.openGlobalSearch.bind(plugin);
            const settings = Object.assign(Object.assign({}, plugin.settings), { searchFn, vault: this.app.vault });
            if (ctx.frontmatter) {
                createMetatable(target, ctx.frontmatter, settings);
            }
        }
    });
}
class MetatablePlugin extends obsidian.Plugin {
    onload() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.loadSettings();
            this.registerMarkdownPostProcessor(frontmatterProcessor.bind(this));
            this.addSettingTab(new MetatableSettingTab(this.app, this));
            log('loaded');
        });
    }
    onunload() {
        log('unloaded');
    }
    loadSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            this.settings = Object.assign({}, DEFAULT_SETTINGS, yield this.loadData());
        });
    }
    saveSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.saveData(this.settings);
        });
    }
}

module.exports = MetatablePlugin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXMiOlsibm9kZV9tb2R1bGVzL3RzbGliL3RzbGliLmVzNi5qcyIsInNyYy9zZXR0aW5ncy50cyIsInNyYy90YWJsZS50cyIsInNyYy9wbHVnaW4udHMiXSwic291cmNlc0NvbnRlbnQiOm51bGwsIm5hbWVzIjpbIlBsdWdpblNldHRpbmdUYWIiLCJTZXR0aW5nIiwiZ2V0TGlua3BhdGgiLCJQbHVnaW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF1REE7QUFDTyxTQUFTLFNBQVMsQ0FBQyxPQUFPLEVBQUUsVUFBVSxFQUFFLENBQUMsRUFBRSxTQUFTLEVBQUU7QUFDN0QsSUFBSSxTQUFTLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxPQUFPLEtBQUssWUFBWSxDQUFDLEdBQUcsS0FBSyxHQUFHLElBQUksQ0FBQyxDQUFDLFVBQVUsT0FBTyxFQUFFLEVBQUUsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUU7QUFDaEgsSUFBSSxPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxPQUFPLENBQUMsRUFBRSxVQUFVLE9BQU8sRUFBRSxNQUFNLEVBQUU7QUFDL0QsUUFBUSxTQUFTLFNBQVMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFO0FBQ25HLFFBQVEsU0FBUyxRQUFRLENBQUMsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUUs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
